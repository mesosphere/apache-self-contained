#!/bin/bash
set -o errexit -o nounset -o pipefail
function -h {
cat <<USAGE
 USAGE: ./util (run_apache)?
        ./util bundle

  In the first form, runs the bundled Apache binary. In the second form,
  bundles the system Apache for transfer to another system.

  To invoke the first form, calling ./util with no arguments is sufficient; it
  is the default subcommand.

 run_apache

  Launch the bundled Apache (which is ./httpd). We ensure that LD_LIBRARY_PATH
  points to the local lib directory, so that bundled libs are discovered and
  used in preference to system libs.

 bundle

  Bundle an installed Apache and its shared libraries so that they can be
  deployed as a unit.
 
  To use this function, first install Apache with Yum. Then call:
 
    sudo ./util bundle
 
  The system Apache will be inspected to find its shared library dependencies,
  which will be copied in to ./lib. Apache modules will be placed in ./modules.
  The system Apache binary will also be copied to ./.

USAGE
}; function --help { -h ;}
export LC_ALL=en_US.UTF-8

function main {
  run_apache
}

# Implements run_apache subcommand (see documentation, above).
function run_apache {(
  export LD_LIBRARY_PATH=./lib PORT="${PORT:-9000}"
  msg "Starting Apache on $PORT ..."
  ./httpd -DFOREGROUND -f "$PWD"/httpd.conf
  msg "... success."
)}

# Implements bundle subcommand (see documentation, above).
function bundle {
  prep_bundle
  local d="$(pwd -P)"
  local b="$(basename "$d")"
  local tmp=/tmp/"$b".tgz
  msg "Bundling present directory to $tmp ..."
  tar --exclude '.git*' -C "$(dirname "$d")" -cz "$b" -f "$tmp"
  msg "... success."
}

function prep_bundle {
  cp -L /usr/sbin/httpd ./httpd
  mkdir -p modules
  cp -L /etc/httpd/modules/* ./modules/
  chmod a+rx ./modules/* ./httpd
  copy_libs
}

# Copy libs required by an installed Apache in to ./lib, for packaging.
function copy_libs {
  mkdir -p lib
  linked_sos | while read -r lib
               do cp -L "$lib" ./lib/
               done
  chmod a+rx lib/*
}

function linked_sos {
  ldd /usr/sbin/httpd | egrep -o '=> /[^ ]+' | cut -c4-
}

function msg { out "$*" >&2 ;}
function err { local x=$? ; msg "$*" ; return $(( $x == 0 ? 1 : $x )) ;}
function out { printf '%s\n' "$*" ;}

if [[ ${1:-} ]] && declare -F | cut -d' ' -f3 | fgrep -qx -- "${1:-}"
then "$@"
else main "$@"
fi
